name: 'MainsailOS/dummy'
author: 'Stefan Dej'
description: 'Build Dummy images'
inputs:
  config:
    description: 'Board config name'
    required: true
  custompios-repository:
    description: 'Repository for CustomPiOS'
    required: false
    default: 'guysoft/CustomPiOS'
  custompios-ref:
    description: 'Branch / Tag / SHA to checkout CustomPiOS'
    required: false
    default: 'devel'
outputs:
  type:
    description: SBC type (raspberry/armbian/...)
    value: ${{ steps.config.outputs.TYPE }}
  sbc:
    description: SBC model (rpi32/orangepi4lts/...)
    value: ${{ steps.config.outputs.SBC }}

runs:
  using: 'composite'
  steps:
    - name: Install Dependencies
      shell: bash
      run: sudo apt update; sudo apt install --yes coreutils p7zip-full qemu-user-static zip

    - name: Checkout CustomPiOS
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.custompios-repository }}
        ref: ${{ inputs.custompios-ref }}
        path: CustomPiOS

    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        path: repository
        submodules: true

    - name: Read board config
      id: config
      shell: bash
      run: |
        IFS='/' read -r -a array <<< "${{ inputs.config }}"
        TYPE=${array[0]}
        SBC=${array[1]}
        
        echo "TYPE=${TYPE}" >> $GITHUB_OUTPUT
        echo "SBC=${SBC}" >> $GITHUB_OUTPUT
        
        GENERIC_FILE="./repository/config/default"
        if [[ -f "$GENERIC_FILE" ]]; then
          cat "${GENERIC_FILE}" >> ./repository/src/config
        fi
        
        TYPE_FILE="./repository/config/${TYPE}/default"
        if [[ -f "$TYPE_FILE" ]]; then
          cat "${TYPE_FILE}" >> ./repository/src/config
        fi
        
        SBC_FILE="./repository/config/${TYPE}/${SBC}"
        if [[ -f "$SBC_FILE" ]]; then
          cat "${SBC_FILE}" >> ./repository/src/config
        fi
        
        source ./repository/src/config
        
        echo $DOWNLOAD_URL_CHECKSUM
        echo $DOWNLOAD_URL_IMAGE
        echo $MODULES
        echo $(cat ./repository/src/config)
        
        echo "DOWNLOAD_URL_CHECKSUM=${DOWNLOAD_URL_CHECKSUM}" >> $GITHUB_OUTPUT
        echo "DOWNLOAD_URL_IMAGE=${DOWNLOAD_URL_IMAGE}" >> $GITHUB_OUTPUT
        echo "MODULES=${MODULES}" >> $GITHUB_OUTPUT

    - name: Create Dummy Image
      shell: bash
      run: touch ./repository/src/workspace/dummy.img